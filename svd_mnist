{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8332981,"sourceType":"datasetVersion","datasetId":4948354}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom scipy.linalg import svd, norm\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-06T20:05:05.435313Z","iopub.execute_input":"2024-05-06T20:05:05.436269Z","iopub.status.idle":"2024-05-06T20:05:07.911559Z","shell.execute_reply.started":"2024-05-06T20:05:05.436223Z","shell.execute_reply":"2024-05-06T20:05:07.910352Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/mnist-vectors/data/handwriting_training_set.txt\n/kaggle/input/mnist-vectors/data/handwriting_test_set.txt\n/kaggle/input/mnist-vectors/data/handwriting_training_set_labels.txt\n/kaggle/input/mnist-vectors/data/handwriting_test_set_labels.txt\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Open the data file and read the data","metadata":{}},{"cell_type":"code","source":"train_set = '/kaggle/input/mnist-vectors/data/handwriting_training_set.txt'\ntest_set = '/kaggle/input/mnist-vectors/data/handwriting_test_set.txt'\ntrain_labels = '/kaggle/input/mnist-vectors/data/handwriting_training_set_labels.txt'\ntest_labels = '/kaggle/input/mnist-vectors/data/handwriting_test_set_labels.txt'\n\n# read the data into a list of lists\nwith open(train_set, 'r') as f:\n    data = [line.strip().split(',') for line in f.readlines()]\n\nwith open(test_set, 'r') as f:\n    test = [line.strip().split(',') for line in f.readlines()]\n\nwith open(train_labels, 'r') as f:\n    labels = [line.strip().split(',') for line in f.readlines()]\n\nwith open(test_labels, 'r') as f:\n    test_labels = [line.strip().split(',') for line in f.readlines()]","metadata":{"execution":{"iopub.status.busy":"2024-05-06T20:05:15.482310Z","iopub.execute_input":"2024-05-06T20:05:15.482795Z","iopub.status.idle":"2024-05-06T20:05:16.034440Z","shell.execute_reply.started":"2024-05-06T20:05:15.482756Z","shell.execute_reply":"2024-05-06T20:05:16.033357Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"## Convert the data into a numpy array","metadata":{}},{"cell_type":"code","source":"data = np.array(data, dtype=float)\ntest = np.array(test, dtype=float)\nlabels = np.array(labels, dtype=int)\ntest_labels = np.array(test_labels, dtype=int)","metadata":{"execution":{"iopub.status.busy":"2024-05-06T20:05:19.095499Z","iopub.execute_input":"2024-05-06T20:05:19.095889Z","iopub.status.idle":"2024-05-06T20:05:19.427630Z","shell.execute_reply.started":"2024-05-06T20:05:19.095857Z","shell.execute_reply":"2024-05-06T20:05:19.426282Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"## Split the array into 10 subarrays of size 400 x 400\n","metadata":{}},{"cell_type":"code","source":"digit = np.split(data, 10)","metadata":{"execution":{"iopub.status.busy":"2024-05-06T20:05:33.798072Z","iopub.execute_input":"2024-05-06T20:05:33.798562Z","iopub.status.idle":"2024-05-06T20:05:33.803837Z","shell.execute_reply.started":"2024-05-06T20:05:33.798530Z","shell.execute_reply":"2024-05-06T20:05:33.802453Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"## Create 3 dictionaries to store the left singular vectors, singular values, and right singular vectors, then compute the SVD for each subarray and store the results in the dictionaries","metadata":{}},{"cell_type":"code","source":"left_singular_vectors = {}\nsingular_values = {}\nright_singular_vectors = {}\n\nfor i in range(10):\n    left_singular_vectors[i], singular_values[i], right_singular_vectors[i] = svd(digit[i], full_matrices=False)\n    left_singular_vectors.update({i: left_singular_vectors[i]})\n    singular_values.update({i: singular_values[i]})\n    right_singular_vectors.update({i: right_singular_vectors[i]})","metadata":{"execution":{"iopub.status.busy":"2024-05-06T20:05:45.138489Z","iopub.execute_input":"2024-05-06T20:05:45.138919Z","iopub.status.idle":"2024-05-06T20:05:45.823034Z","shell.execute_reply.started":"2024-05-06T20:05:45.138888Z","shell.execute_reply":"2024-05-06T20:05:45.821395Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"## Plot the original image and the reconstructed image from the 50 basis vectors, then plot the singular values for the first subarray in log scale","metadata":{}},{"cell_type":"code","source":"basis = 50\n\n# set the figure size to 9x6\nplt.figure(figsize=(9, 6)) \n\n# 400x200 matrix of basis vectors\nbasis_vectors = np.concatenate([left_singular_vectors[x][:, :basis] for x in range(10)], axis=1)\n\n# plot the original image on the left\nplt.subplot(1, 2, 1)\n\n# reshape the image to 20x20\n# image = digit[3][0].reshape(20, 20)\n# plt.imshow(digitimage, cmap='gray')\n\nplt.imshow(digit[3][0].reshape(20, 20), cmap='gray')\n\n# set the title\nplt.title('Original')\n\n# plot the reconstructed image on the right\nplt.subplot(1, 2, 2)\n\n# dot product of the basis vectors and the original image\n# new_basis_vectors = basis_vectors.dot(basis_vectors.T).dot(digit[3][0]).reshape(20, 20)\n# plt.imshow(basis_vectors.dot(new_basis_vectors, cmap='gray')\n\nplt.imshow(basis_vectors.dot(basis_vectors.T).dot(digit[3][0]).reshape(20, 20), cmap='gray')\nplt.title('Reconstructed with: ' + str(basis) + ' basis vectors')\nplt.show()\n\n# set the figure size to 10x5\nplt.figure(figsize=(10, 6))\nplt.plot(singular_values[0], color='orange', marker='o') \nplt.yscale('log')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-06T20:05:53.567412Z","iopub.execute_input":"2024-05-06T20:05:53.567796Z","iopub.status.idle":"2024-05-06T20:05:54.461060Z","shell.execute_reply.started":"2024-05-06T20:05:53.567764Z","shell.execute_reply":"2024-05-06T20:05:54.460005Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 900x600 with 2 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]}]}